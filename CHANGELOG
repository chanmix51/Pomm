=== 1.1.5

 * Fixes an issue with the PgArray converter (from sukei/1.2)
 * [security] string escaping in LTree converter (from sukei/1.2)

=== 1.1.4

 * Fixed a bug where empty strings could be saved as NULL (#103 from eMerzh/empty_text)
 * Added getMaxPerPage() Pager getter method (from sanpi/1.1)
 * Fixed a bug in date interval when using singular units
 * Error in Exception in PDOFilter
 * PHP 5.5 compatible (from FabienD/travis55)

=== 1.1.3

 *  Indispensable icons in the README.
 *  Add PHP 5.5 compatibility - Remove old Sf sfInflector class, add specific class (#95 from FabienD/issue94)
 *  improved error message for unknown methods in BaseObject (from akp999/master)
 *  Fixed errors in BaseTool and doc (from akp999/master)
 *  Fixed some errors in documentation (from akp999/master)
 *  added support for 'iso_8601' IntervalStyle configuration (#83 from akp999/master)
 *  PHPDoc / Types fixes (#82 from adrienbrault/fixes)

=== 1.1.2

 * tests are now using composer autoloading (#81 from adrienbrault/gitignore).
 * FIX `has` method just relies on entity's container(#79 from jeremyFreeAgent/fix/hasMethod).
 * Lot of typos fixed in the code and in the documentation (#76 from pborreli/typos).
 * New fixtures for map classes generation tests (#75 from brikou/fixtures_usage).
 * FIX getMapFor now returns the same map instance.
 * Harder test for binary arrays converter (see #74).

=== 1.1.1

 * Bug in 'CreateFromForeign' filter. (close #70)
 * Host names can contain '-' in DSN.

=== 1.1.0

 * Updated documentation.
 * Removed unused Query and Insert classes.
 * Bug in multiple column createWhereIn().
 * Multiple column IN condition Bug (close #67).
 * Database is now a Connection pool (closes #66).

=== 1.1.0-RC2

 * Bug in updateByPk with fields order.
 * Delete from db does not impact identity mapper.
 * DeleteByPk to return BaseObject.
 * Refactored identity mapper.
 * fix avoid typo
 * Documentation updated for 1.1.
 * Updated inline documentation.

=== 1.1.0-RC1

 * SimpleCollection, simple iterator on results.
 * Chain calls Collection::registerFilter() methods.
 * BaseObject::extract() now dumps embeded entities.
 * PgEntity now uses identity mapper.
 * Complete HStore support.
 * formatFields() replaces joinSelectFieldXXX().
 * Connection to store map instances.
 * getRemoteSelectFields update.
 * Consistent TsRange type.
 * Number range converter.
 * UpdateByPk() method.
 * Exception when getting unexistent attribute.
 * Fields from db with NULL values are no more ignored.
 * Timestamp range type support.
 * DateTime instance in Where.
 * Optionnal exclude some tables from schema scan.
 * Json converter.
 * Method BaseObjectMap::createAndSaveObject().
 * Method Collection::extract().
 * Fields indexed by alias name.
 * Clear method for entity.
 * Converter and type for timestamp range Pg type.
 * Output stack for tools.
 * findAll now accepts suffix.
 * Namespace of generated file accepts placeholders.
 * Finished converter tests.
 * LTree tests.
 * HStore tests.
 * Segment tests.
 * tests for point and circle.
 * Tests for point and bytea.
 * Tests for Boolean.
 * Added converter tests for int & strings.
 * test for integers.
 * executeAnonymousQuery now in Connection.
 * Deleted old tests, added Where.
 * PgEntity constructor now takes Map instance as argument (#30).
 * Anonymous query into Connection (#29).
 * Fixed converter / mapper bugs as in 1.0 branch.
 * Migrated tests to phpunit, deleted old tests (#26).
=== 1.0.3
 * PgEntity returned entities marked as existing.
 * Generation using inheritance was broken.
 * PgArray uses str_getcsv
=== 1.0.2
 * Map generation problem with arays of user defined types. (#18)
 * PgEntity parser fromPg now supports empty fields (#19)
 * Connection chain call
 * BaseMapTool inheritance issue
 * registerTypeForConverter returns Database instance
 * Missing type for bpchar
 * Wrong namespace in ToolException.
=== 1.0.1
 * Updated documentation.
 * Test for base map generation.
 * BUG in base map class generation.
 * PHPDoc annotations update.
 * Period type is not longer needed.
 * Faster getFields.
 * _extra attribute.
 * NULLs make updates or insert to fail.
 * Problems with NULL values in arrays.
 * problem with empty sets using pgarray.
 * Handle emtpy arrays.
 * Use missing for exception in PgArray.
=== 1.0.0
 * type consistency between pg & pomm.
 * Model generation with new converter system.
 * Quote escaping in array and entity converters.
 * ArrayConverter.
 * Use ROW to avoid litteral syntax.
 * New converter system.
 * Generic accessors made final.
 * Update documentation: virtual fields.
 * Add virtual fields support.
 * Fix a test issue with dates.
 * Add registerTypeForConverter method.
 * Added a wrapper for all tests.
 * Clean pomm_lib.sql.
 * Fix "Bytea" converter problem.
 * Identity Mapper with no PK.
 * Handle when no PK is present.
 * Logger records Map class.
=== RC4
 *  registerConverter can now be chained.
 *  Logger display duration in ms.
 *  No index in SQL logs.
 *  Logger test was broken.
 *  Cannot rely on SQL cursors with PDO.
 *  Added xml to StringConverter.
 *  Added composer.json.
 *  Added the query logger filter.
 *  Added query filter chain.
 *  RETURNING * may not return anything (X.Briand).
 *  update object after saveOne only if returned (X.Briand).
 *  fixed ParameterHolder::mustBeOneOf method.
 *  Unix socket path, views.
=== RC3
 *  Added alias in getTableName() and updated documentation.
 *  Fixed direct attribute access to use overloads. Added the 'has' overload.
 *  Added direct attribute access tests.
 *  fixed BaseObject::__get return issue (X.Briand).
 *  identity mapper cannot rely on object schema anymore.
 *  Fetching a non existing attribute returns null.
 *  Removed getPrimaryKey from BaseObject. BaseObject is now standalone.
 *  BaseObject now implements IteratorAggregate.
 *  INSERT and UPDATE now return getSelectFields().
 *  Handling table inheritance.
 *  Refactored Tools to use the new database Inspector.
 *  Bug fixed about prefix namespace.
=== RC2
 *  Added setName on Database.
 *  Changed generation tools so Database name appears.
 *  tsvector type added to the string converter.
 *  Added alternative bytea escaping.
 *  Tested with pg_escape_bytea.
 *  permit magic access to fields data event if empty (F.Klein).
 *  refactored destination path and namespace handling to avoid forcing default
    dir structure (F.Klein).
 *  Fixed no password in DSN.
 *  moved executeAnonymousQuery to Database object (F.Klein).
 *  updateOne method uses RETURNING * too.
 *  Refactored updateOne using 'RETURNING *' (yes Pg is awesome).
=== RC1
 *  Default IMSmart. Added IMStrict and none.
 *  Added IM as optional argument to createConnection().
 *  Check if the instance is not deleted.
 *  Changed IM implementation. Add foreign method.
 *  added identity map.
 *  Fixed a major bug in Model generation.
=== BETA4
 *  Added Pager.
 *  Added PgInterval converter.
 *  added UUID type support as string.
 *  Force values returned by filters to be array.
 *  Added foreign fields formatter method.
 *  Added filters in Collection. Fixed group by fiels bug.
 *  Added more methods in Collection. Updated documentation.
 *  bench.
=== BETA3
 *  restricted : and @ from the username.
 *  more general username allowed.
 *  Allowed / in user name.
 *  Allowed . in server addr/name.
 *  Added primary key for tests.
=== BETA2
 *  Circle converter.
 *  Fixed HStore converter.
 *  Segment converter.
 *  Point converter is not loaded by default.
=== BETA1
 *  Added updateOne().
 *  Entity converter.
 *  hydrate final + documentation.
 *  transaction check.
 *  Added the «point» builtin type.
 *  typo in documentation.
 *  findWhere uses a suffix for ORDER BY and LIMIT modifiers.
 *  Added an ORDER BY argument to findWhere().
 *  tools now handles a prefix schema and namespace.
 *  Changed tools to handle prefix dir/namespace.
 *  updated readme.
 *  Changes to documentation.
 *  BaseMap are now abstract.
 *  Service has a constructor.
 *  Merged Transaction in Connection.
 *  Generated classes now use consistent namespace.
 *  Changed Pomm:setDatabase & tests.
 *  Array support.
 *  Removed types, added converters.
 *  Fixed fields method call.
 *  getGroupByFields and getSelectFields return an array.
 *  added a getSelectFields method to replace * in SELECT.
 *  Added SQL library.
 *  Added schema scanning feature.
 *  Auto creation of base classes.
 *  now generating map files.
 *  Fixed the autoloader.
 *  Changed name to conform to sf2 autoloading.
 *  Renamed lib to Pomm.
 *  Split Transaction and Connection.
 *  Finished transactions.
 *  Added TransactionConnection.
 *  Object test.
 *  Ok test for where.
 *  Changed namespaces and prefixes.
 *  Connection part.
 *  switched to pomm.
 *  Added old files.
